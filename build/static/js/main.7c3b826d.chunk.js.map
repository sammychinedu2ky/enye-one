{"version":3,"sources":["demo.js","index.js"],"names":["useStyles","makeStyles","root","width","overflowX","alignItemsAndJustifyContent","display","alignItems","justifyContent","table","minWidth","ReactDOM","render","classes","React","useState","columns","title","field","type","lookup","1","2","3","4","5","6","data","state","setState","Box","m","className","Typography","variant","component","style","marginBottom","Paper","margin","actions","icon","tooltip","onClick","event","rowData","alert","JSON","stringify","editable","onRowAdd","newData","Promise","resolve","setTimeout","age","Date","getUTCFullYear","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","document","querySelector"],"mappings":"4zBAMA,IAAMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,MACPC,UAAW,QAEbC,4BAA6B,CAE3BC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAGlBC,MAAO,CACLC,SAAU,MACVN,UAAW,YCffO,IAASC,OAAO,mBDkBD,WACb,IAAMC,EAAUb,IAD0B,EAEhBc,IAAMC,SAAS,CACvCC,QAAS,CACP,CAAEC,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,WAAYC,MAAO,WAAYC,KAAM,QAE9C,CAAEF,MAAO,MAAOC,MAAO,OACvB,CACED,MAAO,QACPC,MAAO,QACPE,OAAQ,CAAEC,EAAG,UAAWC,EAAE,SAASC,EAAE,SAASC,EAAE,SAASC,EAAE,SAASC,EAAE,YAG1EC,KAAM,KAfkC,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAoB1C,OAAQ,oCACN,kBAACC,EAAA,EAAD,CAAKC,EAAE,QAEL,yBAAKC,UAAWnB,EAAQR,6BACxB,kBAAC4B,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,MAAO,CAACC,aAAa,KAA7D,2CAOF,kBAACC,EAAA,EAAD,CAAOF,MAAO,CAACjC,MAAM,MAAMoC,OAAO,SAElC,kBAAC,IAAD,CACEtB,MAAM,sBACND,QAASY,EAAMZ,QAEfW,KAAMC,EAAMD,KACZa,QAAS,CACP,CACEC,KAAM,OACNC,QAAS,SACTC,QAAS,SAACC,EAAOC,GAAR,OAAoBC,MAAM,aAAeC,KAAKC,UAAUH,OAGrEI,SAAU,CACRC,SAAU,SAAAC,GAAO,OACf,IAAIC,SAAQ,SAAAC,GACVC,YAAW,WACTD,IACA,IAAM1B,EAAI,YAAOC,EAAMD,MAEvBwB,EAAQI,KAAK,IAAIC,MAAOC,iBAAmB,IAAID,KAAKL,EAAO,UAAcM,iBAKzE9B,EAAK+B,KAAKP,GACVtB,EAAS,EAAD,GAAMD,EAAN,CAAaD,YACpB,SAEPgC,YAAa,SAACR,EAASS,GAAV,OACX,IAAIR,SAAQ,SAAAC,GACVC,YAAW,WACTD,IACA,IAAM1B,EAAI,YAAOC,EAAMD,MAEvBA,EAAKA,EAAKkC,QAAQD,IAAYT,EAC/BxB,EAAKA,EAAKkC,QAAQV,IAAlB,KAAoC,IAAIK,MAAOC,iBAAmB,IAAID,KAAK7B,EAAKA,EAAKkC,QAAQV,IAAlB,UAAyCM,iBAGnH5B,EAAS,EAAD,GAAMD,EAAN,CAAaD,YACpB,SAEPmC,YAAa,SAAAF,GAAO,OAClB,IAAIR,SAAQ,SAAAC,GACVC,YAAW,WACTD,IACA,IAAM1B,EAAI,YAAOC,EAAMD,MACvBA,EAAKoC,OAAOpC,EAAKkC,QAAQD,GAAU,GACnC/B,EAAS,EAAD,GAAMD,EAAN,CAAaD,YACpB,gBCnGC,MAAUqC,SAASC,cAAc,Y","file":"static/js/main.7c3b826d.chunk.js","sourcesContent":["import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {Paper} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Typography} from '@material-ui/core';\r\nimport {Box} from '@material-ui/core';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '40%',\r\n    overflowX: 'auto'\r\n  },\r\n  alignItemsAndJustifyContent: {\r\n   \r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n   \r\n  },\r\n  table: {\r\n    minWidth: '10%',\r\n    overflowX: \"scroll\"\r\n  },\r\n});\r\nexport default function MaterialTableDemo() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      { title: 'FirstName', field: 'firstname' },\r\n      { title: 'LastName', field: 'lastname' },\r\n      { title: 'Birthday', field: 'birthday', type: 'date' },\r\n     \r\n      { title: 'Age', field: 'age'},\r\n      {\r\n        title: 'Hobby',\r\n        field: 'hobby',\r\n        lookup: { 1: 'Reading', 2:'Coding',3:'Movies',4:'Eating',5:'Tennis',6:'Others' },\r\n      },\r\n    ],\r\n    data: [\r\n      \r\n    ],\r\n  });\r\n\r\n  return (<>\r\n    <Box m=\"auto\" >\r\n    \r\n      <div className={classes.alignItemsAndJustifyContent}>\r\n      <Typography variant='h5' component='h5' style={{marginBottom:12}} >\r\n      Example of an editable form and table\r\n      </Typography>\r\n     \r\n     \r\n      </div>\r\n    </Box>\r\n    <Paper style={{width:\"97%\",margin:'auto'}} >\r\n    \r\n    <MaterialTable \r\n      title=\"Editable Table form\"\r\n      columns={state.columns}\r\n      \r\n      data={state.data}\r\n      actions={[\r\n        {\r\n          icon: 'save',\r\n          tooltip: 'Submit',\r\n          onClick: (event, rowData) => alert(\"You saved \" + JSON.stringify(rowData))\r\n        }\r\n      ]}\r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              const data = [...state.data];\r\n             // alert(new Date(data['birthday']).getUTCFullYear())\r\n              newData.age=(new Date().getUTCFullYear())-(new Date(newData['birthday']).getUTCFullYear())\r\n            \r\n        //   data[data.indexOf(newData)]['age']=\r\n       // (new Date().getUTCFullYear())-(new Date(data[data.indexOf(newData)]['birthday']).getUTCFullYear())\r\n\r\n              data.push(newData);\r\n              setState({ ...state, data });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              const data = [...state.data];\r\n              \r\n              data[data.indexOf(oldData)] = newData;\r\n             data[data.indexOf(newData)]['age']=(new Date().getUTCFullYear())-(new Date(data[data.indexOf(newData)]['birthday']).getUTCFullYear())\r\n             \r\n            \r\n              setState({ ...state, data });\r\n            }, 600);\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              const data = [...state.data];\r\n              data.splice(data.indexOf(oldData), 1);\r\n              setState({ ...state, data });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n    </Paper>\r\n    </>\r\n  );\r\n}\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Demo from './demo';\r\n\r\nReactDOM.render(<Demo />, document.querySelector('#root'));\r\n    "],"sourceRoot":""}